Upper < 0.5 ~ "Below",
is.na(Lower) ~ NA,
.default="Within"))
}
if(dim(i.df)[1]==0){
dat.temp<-data.frame()
}else{
dat.temp<-i.df%>%
filter(Shelf==input$shelf)%>%
mutate(Classification=case_when(
Lower > 0.5 ~ "Above",
Upper < 0.5 ~ "Below",
is.na(Lower) ~ NA,
.default="Within"))
}
this.region<-regions%>%
filter(Name==input$value_select)%>%
st_make_valid()%>%
st_transform(4326)
}
i.df
require(tidyverse)
# source("scripts/Misc/HighLevel_Classification.R")
a.txt<-read_csv(file = "scripts/Misc/Synoptic_text_region.csv")
Indi<-i.df %>%
dplyr::select(Indicator) %>%
unique %>%
mutate(Ind.desc=case_match(Indicator, "Coral.cover"~"hard coral cover",
"Macroalgae" ~"macroalgae",
"Juvenile.density"~"juvenile corals",
"Recovery.performance"~ "recovery performance",
"Community.composition"~"community composition"))
Indi.desc.pe<-as.character(Indi %>% filter(Indicator=="Recovery.performance") %>% pull(Ind.desc))
Indi.desc.j<-as.character(Indi %>% filter(Indicator=="Juvenile.density") %>% pull(Ind.desc))
Indi.desc.co<-as.character(Indi %>% filter(Indicator=="Community.composition") %>% pull(Ind.desc))
Indi.desc.ma<-as.character(Indi %>% filter(Indicator=="Macroalgae") %>% pull(Ind.desc))
Indi.desc.co<-as.character(Indi %>% filter(Indicator=="Community.composition") %>% pull(Ind.desc))
Indi.desc.hc<-as.character(Indi %>% filter(Indicator=="Coral.cover") %>% pull(Ind.desc))
Cl<-i.df%>%filter(Year==y, Reference=="Baseline")%>%Cond.Class()%>%pull(Class)
sent.class=
sprintf(paste(
a.txt%>%filter(Variable=="Autotext.class")%>%pull(Description), ##overall statement
a.txt%>%filter(Variable==Cl)%>%pull(Description)),
y,
Cl)
data<-i.df %>%
filter(Indicator=="Coral.cover" & Reference=="Baseline") %>%
droplevels() %>%
arrange(Year) %>%
mutate(Low=ifelse(Upper<0.5,1,0),
runID.l=data.table::rleid(Low))
data.hc.c<-i.df %>%
filter(Indicator=="Coral.cover" & Reference=="Critical" & Year==y) %>%
droplevels()
if(is.na(data.hc.c$Median)){
sent.hc="Coral cover data is not available."
}else{
start.run<-as.character(data %>%
filter(runID.l==max(runID.l)) %>%
summarise(runStart=first(Year)))
low.years<-nrow(data %>% filter(runID.l==max(runID.l) & Low=='1'))
prev.low<-data %>%
filter(Year<y,Low==1)%>%
summarise(prev.low=min(Year))%>%
pull(prev.low)
data.hc<-data %>%
filter(Year==y)
Low.hc<-data.hc$Upper<0.5
State.hc<-data.hc %>%
mutate(St=ifelse(Upper<0.5, "below",
ifelse(Lower>0.5, "above", "similar to"))) %>%
pull(St)
State.hc.c<-data.hc.c %>%
mutate(St=ifelse(Upper<0.5, "unlikely", "likely")) %>%
pull(St)
#
# Indi.desc<-as.character(data.hc %>% left_join(Indi) %>%
#                           pull(Ind.desc))
#
n.conseq<-as.character(data.hc.c %>%  pull(n.below))
n.reefs<-as.character(data.hc %>%  pull(tn.reefs))
n.no.conseq=as.character(as.numeric(n.reefs)-as.numeric(n.conseq))
# # Regional cover of hard corals  declined to below historical reference levels, and below consequence at at least one reef.
# Autotext1="The cover of hard corals declined to be below historical reference levels. At current levels, hard corals are unlikely to be supporting positive reef accretion at %s of the reefs monitored."
#
# # Regional cover of hard corals declined to below historical reference levels, but above consequence at all reefs.
# Autotext2="The cover of hard corals declined to be below historical reference levels. However, at current levels the cover hard corals are likely to be supporting positive reef accretion at all reefs monitored."
#
# # Regional cover of hard corals remain below historical reference levels, and below consequence at at least one reef.
# Autotext3="The cover of hard corals has remained below historical reference levels since %s. At current levels hard corals are unlikely to be supporting positive reef accretion at %s of %s the reefs monitored."
#
# # Regional cover of hard corals remain below historical reference levels, but above consequence at all reefs.
# Autotext4="The cover of hard corals has remained below historical reference levels since %s. However, at current levels the cover hard corals are likely to be supporting positive reef accretion at all reefs monitored."
#
# # Regional cover of hard corals at or above historical reference levels, at least one reef below consequence.
# Autotext5="The cover of hard corals is %s historical reference levels. At current levels hard corals are likely to be supporting positive reef accretion at %s of %s the reefs monitored."
#
# # Regional cover of hard corals at or above historical reference levels, all reefs above consequence.
# Autotext6="The cover of hard corals is %s historical reference levels. At current levels hard corals are likely to be supporting positive reef accretion at all reefs monitored"
sent.hc=
ifelse((isTRUE(Low.hc) & (as.numeric(n.conseq) >0) & low.years<=1),
sprintf(a.txt%>%filter(Variable=="Autotext1")%>%pull(Description),
#y,
#Indi.desc,
n.conseq),
ifelse((isTRUE(Low.hc) & as.numeric(n.conseq)==0 & low.years==1),
sprintf(a.txt%>%filter(Variable=="Autotext2")%>%pull(Description),
#y,
#Indi.desc,
),
ifelse((isTRUE(Low.hc) & as.numeric(n.conseq) >0 & low.years>1),
sprintf(a.txt%>%filter(Variable=="Autotext3")%>%pull(Description),
#Indi.desc,
prev.low,
y,
n.conseq, n.reefs),
ifelse(isTRUE(Low.hc) & as.numeric(n.conseq==0) & low.years>1,
sprintf(a.txt%>%filter(Variable=="Autotext4")%>%pull(Description),
#Indi.desc,
prev.low,
y),
ifelse(isFALSE(Low.hc) & as.numeric(n.conseq >0),
sprintf(a.txt%>%filter(Variable=="Autotext5")%>%pull(Description),
#y,
#Indi.desc,
State.hc,
n.no.conseq, n.reefs),
if(isFALSE(Low.hc) & as.numeric(n.conseq==0)){
sprintf(a.txt%>%filter(Variable=="Autotext6")%>%pull(Description),
#y,
#,
State.hc)})
)
)
)
)
}
data.p<-i.df %>%
filter(Indicator=="Recovery.performance" &  Reference=="Baseline" & Year==y) %>%
droplevels()
data.p.c<-i.df %>%
filter(Indicator=="Recovery.performance" & Reference=="Critical" & Year==y) %>%
droplevels()
Low.pe<-data.p$Upper<0.5
high.pe<-data.p$Lower>0.5
at.or.above<-ifelse(isTRUE(high.pe), "exceeded", "been consistent with")
Concern<-ifelse(isFALSE(Low.hc), "concern","additional concern")
# Indi.desc.pe<-as.character(Indi %>%
#                              filter(Indicator=="Recovery.performance") %>%
#                              pull(Ind.desc))
#
n.reef.pe<-as.character(data.p %>%  pull(tn.reefs))
n.reef.pe.low<-as.character(data.p %>%  pull(n.below))
n.reef.pe.c.low<-as.character(data.p.c %>%  pull(n.below))
sent.pe=
ifelse(isTRUE(Low.pe),
sprintf(a.txt%>%filter(Variable=="Autotext7")%>%pull(Description),
Concern),
ifelse(isFALSE(Low.pe),
sprintf(a.txt%>%filter(Variable=="Autotext8")%>%pull(Description),
at.or.above), NA)
)
if(is.na(sent.pe)){sent.pe=NULL}
sent.pe.n=
sprintf(a.txt%>%filter(Variable=="Autotext9")%>%pull(Description),
n.reef.pe,
n.reef.pe.low)
sent.pe.c=
ifelse(n.reef.pe==n.reef.pe.c.low,
a.txt%>%filter(Variable=="Autotext10")%>%unique()%>%pull(Description),
ifelse(n.reef.pe >n.reef.pe.c.low &n.reef.pe.c.low>0,
sprintf(a.txt%>%filter(Variable=="Autotext11")%>%pull(Description),
n.reef.pe.c.low), NA)
)
if(is.na(sent.pe.c)){sent.pe.c=NULL}
#********************##
#  Juveniles      ####
#*******************###
#JUv data
data.j<-i.df%>%
filter(Indicator=="Juvenile.density" &  Reference=="Baseline" & Year==y) %>%
droplevels()
Low.j<-data.j$Upper<0.5
State.j<-data.j %>%
mutate(St=ifelse(Upper<0.5, "below",
ifelse(Lower>0.5, "above", "similar to"))) %>%
pull(St)
add.conseq<-ifelse(isFALSE(Low.hc) & isFALSE(Low.pe),"Detracting","Further detracting")
n.reef.j<-as.character(data.j %>%  pull(tn.reefs))
n.reef.j.low<-as.character(data.j %>%  pull(n.below))
sent.j=
ifelse(isFALSE(Low.j) & n.reef.j.low==0,
sprintf(a.txt%>%filter(Variable=="Autotext12")%>%pull(Description),
State.j),
ifelse(isFALSE(Low.j) & n.reef.j.low>0,
sprintf(a.txt%>%filter(Variable=="Autotext13")%>%pull(Description),
State.j,
n.reef.j.low),
ifelse(isTRUE(Low.j),
sprintf(a.txt%>%filter(Variable=="Autotext14")%>%pull(Description),
add.conseq,
n.reef.j.low,
n.reef.j))
)
)
if(is.na(Low.j)){sent.j=NULL}
data.j.c<-i.df %>%
filter(Indicator=="Juvenile.density" & Reference=="Critical" & Year==y) %>%
droplevels()
Low.j.c<-data.j.c$Upper<0.5
Concern.j.low<-ifelse(isTRUE(Low.j.c), "Of added concern is that","However")
Concern.j.high<-ifelse(isTRUE(Low.j.c),"However", "In addition")
n.reef.j.c.low<-as.character(data.j.c %>%  pull(n.below))
sent.j.c=
ifelse(isTRUE(Low.j) & n.reef.j.c.low==0,
sprintf(a.txt%>%filter(Variable=="Autotext15")%>%pull(Description),
Concern.j.low),
ifelse(isFALSE(Low.j) & n.reef.j.c.low==0,
sprintf(a.txt%>%filter(Variable=="Autotext15")%>%pull(Description),
Concern.j.high),
ifelse(isTRUE(Low.j) & n.reef.j.c.low==n.reef.j,
sprintf(a.txt%>%filter(Variable=="Autotext16")%>%pull(Description),
Concern.j.low),
ifelse(isFALSE(Low.j) & n.reef.j.c.low==n.reef.j,
sprintf(a.txt%>%filter(Variable=="Autotext16")%>%pull(Description),
Concern.j.high),
ifelse(isTRUE(Low.j) & n.reef.j.c.low<n.reef.j,
sprintf(a.txt%>%filter(Variable=="Autotext17")%>%pull(Description),
Concern.j.low,
n.reef.j.c.low),
sprintf(a.txt%>%filter(Variable=="Autotext17")%>%pull(Description),
Concern.j.high,
n.reef.j.c.low)
)
)
)
)
)
if(is.na(Low.j.c)){sent.j.c=NULL}
#********************##
#  Macroalage      ####
#*******************###
#Ma data
data.m<-i.df %>%
filter(Indicator=="Macroalgae" &  Reference=="Baseline" & Year==y) %>%
droplevels()
data.m.c<-i.df %>%
filter(Indicator=="Macroalgae" & Reference=="Critical" & Year==y) %>%
droplevels()
Low.m<-data.m$Upper<0.5
Low.m.c<-data.m.c$Upper<0.5
State.ma<-data.m %>%
mutate(St=ifelse(Upper<0.5, "above",
ifelse(Lower>0.5, "below", "similar to"))) %>%
pull(St)
Concern.ma<-ifelse(isTRUE(Low.j|Low.pe), "Adding to concern for recovery potential","Of concern")
Concern.ma.c<-ifelse(isTRUE(Low.m),"Additionally","However due to high reference levels")
n.reef.m<-as.character(data.m %>%  pull(tn.reefs))
n.reef.m.low<-as.character(data.m %>%  pull(n.below))
n.reef.m.c.low<-as.character(data.m.c %>%  pull(n.below))
#MA at or below
Autotext18="The representation of macroalgae species within the benthic algal communities was %s historical reference levels."
#MA above
Autotext19="%s the representation of macroalgae species within the benthic algal communities was above historical reference levels."
sent.m=
ifelse(isFALSE(Low.m),
sprintf(a.txt%>%filter(Variable=="Autotext18")%>%pull(Description),
State.ma),
sprintf(a.txt%>%filter(Variable=="Autotext15")%>%unique()%>%pull(Description),
Indi.desc.j,
Indi.desc.ma))
sent.m.c=
ifelse(n.reef.m.c.low==0,
a.txt%>%filter(Variable=="Autotext20")%>%pull(Description),
ifelse(n.reef.m.c.low==n.reef.m,
sprintf(a.txt%>%filter(Variable=="Autotext21")%>%pull(Description),
Concern.ma.c),
sprintf(a.txt%>%filter(Variable=="Autotext22")%>%pull(Description),
Concern.ma.c,
n.reef.m.c.low)
)
)
#********************##
# Community.composition#####
#********************##
#comp data
data.co<-i.df %>%
filter(Indicator=="Community.composition" &  Reference=="Baseline" & Year==y) %>%
droplevels()
data.co.low<-i.df %>%
filter(Indicator=="Community.composition" & Reference=="Baseline") %>%
droplevels() %>%
arrange(Year) %>%
mutate(Low=ifelse(Upper<0.5,1,0),
runID.l=data.table::rleid(Low))
start.run.co<-as.character(data.co.low %>%
filter(runID.l==max(runID.l)) %>%
summarise(runStart=first(Year)))
low.years.co<-nrow(data.co.low %>% filter(runID.l==max(runID.l) & Low=='1'))
data.co.c<-i.df %>%
filter(Indicator=="Community.composition" & Reference=="Critical" & Year==y) %>%
droplevels()
Low.co<-data.co$Upper<0.5
Low.co.c<-data.co.c$Upper<0.5
n.reef.co<-as.character(data.co %>%  pull(tn.reefs))
n.reef.co.low<-as.character(data.co %>%  pull(n.below))
sent.co<-
ifelse(isTRUE(Low.co) & isFALSE(Low.hc)& low.years.co>0,
sprintf(a.txt%>%filter(Variable=="Autotext23")%>%unique()%>%pull(Description),
n.reef.co.low),
ifelse(isTRUE(Low.co) & isFALSE(Low.hc) & low.years.co>0,
sprintf(a.txt%>%filter(Variable=="Autotext24")%>%unique()%>%pull(Description),
start.run.co,
n.reef.co.low),
ifelse(isFALSE(Low.co) & isFALSE(Low.hc) & n.reef.co.low==0,
a.txt%>%filter(Variable=="Autotext25")%>%unique()%>%pull(Description),
ifelse(isFALSE(Low.co) & isFALSE(Low.hc) & as.numeric(n.reef.co.low)>0,
sprintf(a.txt%>%filter(Variable=="Autotext26")%>%unique()%>%pull(Description),
n.reef.co.low),
ifelse(isTRUE(Low.co) & isTRUE(Low.hc)& low.years.co==0,
sprintf(a.txt%>%filter(Variable=="Autotext27")%>%unique()%>%pull(Description),
n.reef.co.low),
ifelse(isTRUE(Low.co) & isTRUE(Low.hc) & low.years.co>0,
sprintf(a.txt%>%filter(Variable=="Autotext28")%>%unique()%>%pull(Description),
start.run.co,
n.reef.co.low),a.txt%>%filter(Variable=="Autotext29")%>%unique()%>%pull(Description))
)
)
)
)
)
sent.k3<-
ifelse(isTRUE(Low.co) & isFALSE(Low.co.c),
sprintf(a.txt%>%filter(Variable=="Autotext30")%>%unique()%>%pull(Description),
n.reef.co.low),
if(isTRUE(Low.co) & isTRUE(Low.co.c)){
a.txt%>%filter(Variable=="Autotext31")%>%unique()%>%pull(Description)}else{
#a.txt%>%filter(Variable=="Autotext32")%>%unique()%>%pull(Description)
""
})
sent.k3
# if(isFALSE(Low.co)){sent.k3=NULL}
if(sent.k3=""){sent.k3=NULL}
# if(isFALSE(Low.co)){sent.k3=NULL}
if(sent.k3=""){sent.k3=NULL}
# if(isFALSE(Low.co)){sent.k3=NULL}
if(sent.k3==""){sent.k3=NULL}
#********************************************************************************************
# Sampling summary lead in for context and to reduce repetition within indicator sentences####
#********************************************************************************************
not.j=as.numeric(n.reefs)-as.numeric(n.reef.j)
not.comp=as.numeric(n.reefs)-as.numeric(n.reef.co)
not.pe=as.numeric(n.reefs)-as.numeric(n.reef.pe)
not.ma=as.numeric(n.reefs)-as.numeric(n.reef.m)
# sample.autotext="This synopsis was derived from indicators estimated at %s locations, across reefs and survey depths. In %s, all indicators were assessed for each those locations."
# sample.autotext.n1="This synopsis was derived from indicators estimated at %s locations, across reefs and survey depths. In %s, the scores for %s was not available in %s of those locations."
# sample.autotext.n2="This synopsis was derived from indicators estimated at %s locations, across reefs and survey depths. In %s, the scores for %s and %s were not avaialble in %s and %s of these locations, respectively."
# sample.autotext.n3="This synopsis reflects the indicator scores observed at %s reef and depth combinations. In %s,the scores for %s, %s and %s were not avaliable in %s, %s and %s of these locations, respectively."
#
sent.samp=
ifelse(max(not.comp,not.j,not.pe,not.ma)==0,
sprintf(a.txt%>%filter(Variable=="sample.autotext")%>%unique()%>%pull(Description),
n.reefs,
y),
ifelse(not.j>0 & max(not.comp,not.pe,not.ma)==0,
sprintf(a.txt%>%filter(Variable=="sample.autotext.n1")%>%unique()%>%pull(Description),
n.reefs,
y,
Indi.desc.j,
not.j),
ifelse(not.comp>0 & max(not.j,not.pe,not.ma)==0,
sprintf(a.txt%>%filter(Variable=="sample.autotext.n1")%>%unique()%>%pull(Description),
n.reefs,
y,
Indi.desc.co,
not.comp),
ifelse(not.pe>0 & max(not.j,not.comp,not.ma)==0,
sprintf(a.txt%>%filter(Variable=="sample.autotext.n1")%>%unique()%>%pull(Description),
n.reefs,
y,
Indi.desc.pe,
not.pe),
ifelse(not.ma>0 & max(not.j,not.pe,not.comp)==0,
sprintf(a.txt%>%filter(Variable=="sample.autotext.n1")%>%unique()%>%pull(Description),
n.reefs,
y,
Indi.desc.ma,
not.ma),
ifelse(not.j>0 & not.comp>0 & max(not.ma,not.pe)==0,
sprintf(a.txt%>%filter(Variable=="sample.autotext.n2")%>%unique()%>%pull(Description),
n.reefs,
y,
Indi.desc.j,
Indi.desc.co,
not.j,
not.comp),
ifelse(not.j>0 & not.ma>0 & max(not.comp,not.pe)==0,
sprintf(a.txt%>%filter(Variable=="sample.autotext.n2")%>%unique()%>%pull(Description),
n.reefs,
y,
Indi.desc.j,
Indi.desc.ma,
not.j,
not,ma),
ifelse(not.j>0 & not.pe>0 & max(not.comp,not.ma)==0,
sprintf(a.txt%>%filter(Variable=="sample.autotext.n2")%>%unique()%>%pull(Description),
n.reefs,
y,
Indi.desc.j,
Indi.desc.pe,
not.j,
not.pe),
ifelse(not.pe>0 & not.ma>0 & max(not.comp,not.j)==0,
sprintf(a.txt%>%filter(Variable=="sample.autotext.n2")%>%unique()%>%pull(Description),
n.reefs,
y,
Indi.desc.pe,
Indi.desc.ma,
not.pe,
not,ma),
ifelse(not.pe>0 & not.comp>0 & max(not.ma,not.j)==0,
sprintf(a.txt%>%filter(Variable=="sample.autotext.n2")%>%unique()%>%pull(Description),
n.reefs,
y,
Indi.desc.pe,
Indi.desc.co,
not.pe,
not.comp),
ifelse(not.ma>0 & not.comp>0 & max(not.pe,not.j)==0,
sprintf(a.txt%>%filter(Variable=="sample.autotext.n2")%>%unique()%>%pull(Description),
n.reefs,
y,
Indi.desc.ma,
Indi.desc.co,
not.ma,
not.comp),
ifelse(not.ma>0 & not.comp>0 & not.j>0 & not.pe==0,
sprintf(a.txt%>%filter(Variable=="sample.autotext.n3")%>%unique()%>%pull(Description),
n.reefs,
y,
Indi.desc.ma,
Indi.desc.co,
Indi.desc.j,
not.ma,
not.comp,
not.j),
ifelse(not.ma>0 & not.pe>0 & not.j>0 & not.comp==0,
sprintf(a.txt%>%filter(Variable=="sample.autotext.n3")%>%unique()%>%pull(Description),
n.reefs,
y,
Indi.desc.ma,
Indi.desc.pe,
Indi.desc.j,
not.ma,
not.pe,
not.j),
ifelse(not.ma>0 & not.comp>0 & not.pe>0 & not.j==0,
sprintf(a.txt%>%filter(Variable=="sample.autotext.n3")%>%unique()%>%pull(Description),
n.reefs,
y,
Indi.desc.ma,
Indi.desc.co,
Indi.desc.pe,
not.ma,
not.comp,
not.pe),
ifelse(not.pe>0 & not.comp>0 & not.j>0 & not.ma==0,
sprintf(a.txt%>%filter(Variable=="sample.autotext.n3")%>%unique()%>%pull(Description),
n.reefs,
y,
Indi.desc.pe,
Indi.desc.co,
Indi.desc.j,
not.pe,
not.comp,
not.j)
)
)
)
)
)
)
)
)
)
)
)
)
)
)
)
#combine sentences####
caption<-format_html_list(c(sent.class,
sent.hc,
sent.pe,
sent.pe.n,
sent.pe.c,
sent.j,
sent.j.c,
sent.m,
sent.m.c,
sent.co,
sent.k3),
ordered = F)
note<-paste0("<i>Disclaimer:</i>", "\n",
sent.samp)
return(list(caption, note))
caption
runApp()
runApp()
View(comp)
View(scores)
